load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "lsmkv",
    srcs = [
        "binary_search_tree.go",
        "binary_search_tree_map.go",
        "binary_search_tree_multi.go",
        "bloom_filter_metrics.go",
        "bucket.go",
        "bucket_backup.go",
        "bucket_options.go",
        "bucket_recover_from_wal.go",
        "commitlogger.go",
        "commitlogger_parser.go",
        "commitlogger_parser_collection.go",
        "compactor_map.go",
        "compactor_map_reusable_pairs.go",
        "compactor_replace.go",
        "compactor_set.go",
        "cursor_bucket.go",
        "cursor_bucket_map.go",
        "cursor_bucket_set.go",
        "cursor_memtable_collection.go",
        "cursor_memtable_map.go",
        "cursor_memtable_replace.go",
        "cursor_segment_collection.go",
        "cursor_segment_collection_reusable.go",
        "cursor_segment_map.go",
        "cursor_segment_replace.go",
        "doc.go",
        "memtable.go",
        "memtable_flush.go",
        "memtable_metrics.go",
        "memtable_size_advisor.go",
        "metrics.go",
        "segment.go",
        "segment_bloom_filters.go",
        "segment_collection_strategy.go",
        "segment_group.go",
        "segment_group_compaction.go",
        "segment_key_and_tombstone_extractor.go",
        "segment_net_count_additions.go",
        "segment_precompute_for_compaction.go",
        "segment_replace_strategy.go",
        "segment_serialization.go",
        "store.go",
        "strategies.go",
        "strategies_map.go",
        "strategies_map_sorted_merger.go",
        "strategies_set.go",
    ],
    importpath = "github.com/marcussorealheis/weaviate/adapters/repos/db/lsmkv",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@com_github_semi_technologies_weaviate//adapters/repos/db/lsmkv/rbtree:go_default_library",
        "@com_github_semi_technologies_weaviate//adapters/repos/db/lsmkv/segmentindex:go_default_library",
        "@com_github_semi_technologies_weaviate//entities/cyclemanager:go_default_library",
        "@com_github_semi_technologies_weaviate//entities/diskio:go_default_library",
        "@com_github_semi_technologies_weaviate//entities/errorcompounder:go_default_library",
        "@com_github_semi_technologies_weaviate//entities/storagestate:go_default_library",
        "@com_github_semi_technologies_weaviate//entities/storobj:go_default_library",
        "@com_github_semi_technologies_weaviate//usecases/monitoring:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_willf_bloom//:go_default_library",
    ],
)

go_test(
    name = "lsmkv_test",
    srcs = [
        "binary_search_tree_map_test.go",
        "binary_search_tree_test.go",
        "bucket_backup_test.go",
        "concurrent_reading_benchmark_test.go",
        "memtable_size_advisor_test.go",
        "memtable_test.go",
        "red_black_tree_test.go",
        "segment_bloom_filters_test.go",
        "segment_net_count_additions_test.go",
        "segment_precompute_for_compation_test.go",
        "segment_serialization_benchmarks_test.go",
        "segment_serialization_test.go",
        "strategies_map_benchmark_test.go",
        "strategies_map_sorted_merger_test.go",
        "strategies_map_test.go",
        "strategies_set_test.go",
    ],
    embed = [":lsmkv"],
    deps = [
        "@com_github_google_uuid//:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_semi_technologies_weaviate//adapters/repos/db/lsmkv/rbtree:go_default_library",
        "@com_github_semi_technologies_weaviate//entities/storagestate:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_sirupsen_logrus//hooks/test:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
